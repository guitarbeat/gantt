name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    name: Test (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.19, 1.20, 1.21]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build-without-latex:
    name: Build without XeLaTeX (CI/CD Robustness Test)
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build without XeLaTeX (should succeed)
      run: make -f scripts/Makefile build

    - name: Verify LaTeX generation works without PDF
      run: |
        if [ ! -f "generated/monthly_calendar.tex" ]; then
          echo "❌ LaTeX source file not found"
          exit 1
        fi
        echo "✅ LaTeX files generated successfully without XeLaTeX dependency"

    - name: Upload LaTeX artifacts
      uses: actions/upload-artifact@v4
      with:
        name: latex-only-${{ github.sha }}
        path: |
          generated/*.tex
          generated/plannergen
        retention-days: 7

  build:
    name: Build & PDF Generation
    runs-on: ubuntu-latest
    needs: [test, build-without-latex]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install XeLaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-xetex texlive-latex-extra texlive-fonts-recommended texlive-fonts-extra

    - name: Download dependencies
      run: go mod download

    - name: Run go vet
      run: go vet ./...

    - name: Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "The following files are not formatted:"
          gofmt -s -l .
          exit 1
        fi

    - name: Build project (LaTeX generation)
      run: make -f scripts/Makefile build-latex

    - name: Build project with PDF (if XeLaTeX available)
      run: make -f scripts/Makefile build

    - name: Verify PDF generation
      run: |
        # Check for main PDF output
        if [ ! -f "generated/monthly_calendar.pdf" ]; then
          echo "❌ Main PDF not found: generated/monthly_calendar.pdf"
          ls -la generated/
          exit 1
        fi

        # Check PDF file size (50KB - 200KB range)
        PDF_SIZE=$(stat -c%s "generated/monthly_calendar.pdf")
        MIN_SIZE=50000
        MAX_SIZE=200000

        echo "✅ PDF size: $PDF_SIZE bytes"

        if [ $PDF_SIZE -lt $MIN_SIZE ]; then
          echo "❌ PDF too small: $PDF_SIZE bytes (minimum: $MIN_SIZE bytes)"
          exit 1
        fi

        if [ $PDF_SIZE -gt $MAX_SIZE ]; then
          echo "❌ PDF too large: $PDF_SIZE bytes (maximum: $MAX_SIZE bytes)"
          exit 1
        fi

        # Verify PDF is valid
        if ! file "generated/monthly_calendar.pdf" | grep -q "PDF"; then
          echo "❌ Generated file is not a valid PDF"
          exit 1
        fi

        echo "✅ PDF generation successful"

    - name: Verify LaTeX files generated
      run: |
        if [ ! -f "generated/monthly_calendar.tex" ]; then
          echo "❌ LaTeX source file not found"
          exit 1
        fi
        echo "✅ LaTeX files generated"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: phd-planner-${{ github.sha }}
        path: |
          generated/*.pdf
          generated/*.tex
          generated/plannergen
        retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Gosec Security Scanner
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: ./...

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m